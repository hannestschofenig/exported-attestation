



Network Working Group                                         T. Fossati
Internet-Draft                                                    Linaro
Intended status: Standards Track                            M. U. Sardar
Expires: 21 August 2025                                       TU Dresden
                                                           H. Tschofenig
                                                                   H-BRS
                                                        17 February 2025


            Remote Attestation with Exported Authenticators
             draft-fossati-rats-exported-attestation-latest

Abstract

   This specification defines a method for two parties in a
   communication interaction to exchange attestation evidence and
   attestation results using exported authenticators, as defined in RFC
   9261.  This approach falls into the category of post-handshake
   attestation by exchanging payloads in the application layer protocol
   while binding the remote attestation to the underlying communication
   channel.  This document supports both the passport and background
   check models from the RATS architecture.

About This Document

   This note is to be removed before publishing as an RFC.

   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-fossati-rats-exported-
   attestation/.

   Discussion of this document takes place on the LAMPS Working Group
   mailing list (mailto:tls@ietf.org), which is archived at
   https://datatracker.ietf.org/wg/rats/about/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/tls/.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 21 August 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Terminology
   3.  Architecture
   4.  Security Considerations
   5.  IANA Considerations
   6.  References
     6.1.  Normative References
     6.2.  Informative References
   Appendix A.  Acknowledgements
   Authors' Addresses

1.  Introduction

   There is a growing need to demonstrate to a remote party that
   cryptographic keys are stored in a secure element, the device is in a
   known good state, secure boot has been enabled, and that low-level
   software and firmware have not been tampered with.  Remote
   attestation provides this capability.

   More technically, an Attester produces a signed collection of Claims
   that constitute Evidence about its running environment(s).  A Relying
   Party may consult an Attestation Result produced by a Verifier that
   has appraised the Evidence to make policy decisions regarding the
   trustworthiness of the Target Environment being assessed.  This is,
   in essence, what RFC 9334 defines.

   At the time of writing, several standard and proprietary remote
   attestation technologies are in use.  This specification aims to
   remain as technology-agnostic as possible concerning implemented
   remote attestation technologies.  As a result, this document focuses
   on the conveyance of Evidence and Attestation Results as part of the
   payloads defined by Exported Authenticators.  The end-entity
   certificate is associated with key material that serves as an
   Attestation Key, which acts as Evidence originating from the
   Attester.

   This document builds upon two foundational specifications:

   *  RATS Architecture [RFC9334]: The RATS (Remote Attestation
      Procedures) architecture defines how remote attestation systems
      establish trust between parties by exchanging attestation evidence
      and results.  These interactions can follow different models, such
      as the passport or background check model, depending on the role
      of a verifier in the system.

   *  TLS Exported Authenticators [RFC9261]: TLS Exported Authenticators
      are structured messages that can be exported by either party in a
      TLS connection and validated by the other party.  Once a TLS
      connection is established, an authenticator message can be
      constructed to prove possession of a certificate and its
      corresponding private key.  The mechanisms described in this
      document focus primarily on the server's ability to generate TLS
      Exported Authenticators.  Each authenticator is computed using a
      Handshake Context and Finished MAC Key derived from the TLS
      session.  The Handshake Context is the same for both parties, but
      the Finished MAC Key differs depending on whether the
      authenticator is created by the client or the server.  Verified
      authenticators result in the validation of certificate chains and
      confirmed possession of the private key.  These certificates can
      be integrated into a collection of available certificates, and
      desired certificates can also be described within these
      collections.

   This specification reuses exported authenticators to carry
   attestation evidence and/or attestation results.  While exported
   authenticators traditionally deal with certificates, in this
   document, we use them for key attestation.  Consequently, this
   mechanism applies specifically to remote attestation technologies
   that offer key attestation, though the encoding format is not
   restricted to X.509 certificates.

2.  Terminology

   The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD,
   SHOULD NOT, RECOMMENDED, NOT RECOMMENDED, MAY, and OPTIONAL in this
   document are to be interpreted as described in BCP 14 [RFC2119]
   [RFC8174] when, and only when, they appear in all capitals as shown
   here.

   The reader is assumed to be familiar with the vocabulary and concepts
   defined in RFC 9334 and RFC 9261.

   We use the term REMOTE_ATTESTATION payload to refer to the opaque
   token generated by the TLS Exported Authenticator implementation.
   The content is opaque to the application layer protocol but, of
   course, not to the TLS Exported Authenticator implementation.

3.  Architecture

   Designers of application layer protocols need to define payload
   formats for conveying exported authenticators that contain remote
   attestation evidence.  They must also provide mechanisms to inform
   both communication partners of their ability to exchange attestation
   evidence and results via this specification.  This capability can be
   specified in a profile of this document or dynamically negotiated
   during protocol exchanges.

   The Exported Authenticator API defined in RFC 9261 accepts a request,
   a set of certificates, and supporting information as input.  The
   output is an opaque token that serves as the REMOTE_ATTESTATION
   payload.  Upon receipt of a REMOTE_ATTESTATION payload, an endpoint
   that supports secondary certificates MUST take the following steps to
   validate the contained token:

   Use the get context API to retrieve the certificate_request_context
   that was used to generate the authenticator (if any).  Since the
   certificate_request_context for spontaneous server certificates is
   chosen by the server, its usage is implementation-dependent (see
   Section 5 of [RFC9261] for more details).  Use the validate API to
   confirm the authenticator’s validity with respect to the generated
   request (if any).  If validation fails, this SHOULD be treated as a
   connection error.  Upon successful validation, the endpoint can
   conduct further checks to ensure the certificate’s acceptability.

   In this example, the server possesses an identity certificate, while
   the client is not authenticated during the initial TLS exchange.  For
   readability purposes the CA and the Verifier are combined into a
   single entity.  For a specific instantiation of the example exchange
   consider the integration of [I-D.ietf-lamps-csr-attestation] and
   [I-D.ietf-lamps-attestation-freshness].

   Client                   Server                  CA/Verifier
     |                        |                         |
     |------------------------|                         |
     |  Regular TLS Handshake |                         |
     |    (Server-only auth)  |                         |
     |------------------------|                         |
     |                        |                         |
     |  ... time passes ...   |                         |
     |                        |                         |
     |                        |                         |
     |<-----------------------|                         |
     | Exported Authenticator |                         |
     | (ClientCertificateReq) |                         |
     |------------------------|                         |
     |                        |                         |
     |<------------------------------------------------>|
     |      Certificate Management Protocol (CSR)       |
     |       (Attestation evidence requested)           |
     |                        |                         |
     |<-------------------------------------------------|
     |      Certificate       |                         |
     | (Attestation Evidence) |                         |
     |                        |                         |
     |------------------------|                         |
     | Exported Authenticator |                         |
     |  (Authenticator with   |                         |
     |   Attestation Result)  |                         |
     |------------------------|                         |
     |                        |                         |

              Figure 1: Passport Model with Client as Attester

  Client              Attester                 Server           Verifier
    |                   |                        |                  |
    |<------------------------------------------>|                  |
    |  Regular TLS Handshake (Server-only auth)  |                  |
    |                   |                        |                  |
    |   ... time passes ...                      |                  |
    |                   |                        |                  |
    |<-------------------------------------------|                  |
    | Exported Authenticator (ClientCertReq), Nonce                 |
    |                   |                        |                  |
    |------------------>|                        |                  |
    |   Request Evidence|                        |                  |
    |<------------------|                        |                  |
    | Key Attestation   |                        |                  |
    | as Evidence       |                        |                  |
    |------------------------------------------->|                  |
    |  Exported Authenticator                    |                  |
    |  (Authenticator with Evidence)             |                  |
    |                   |                        |----------------->|
    |                   |                        | Send Evidence    |
    |                   |                        |<-----------------|
    |                   |                        | Attestation      |
    |                   |                        | Result           |
    |                   |                        |                  |

         Figure 2: Background Check Model with Client as Attester

4.  Security Considerations

   This document inherits the security considerations of RFC 9261 and
   RFC 9334.  The integrity of the exported authenticators must be
   guaranteed, and any failure in validating attestation evidence SHOULD
   be treated as a fatal error in the communication channel.

5.  IANA Considerations

   TBD: IANA registration for registering new certificate formats.

6.  References

6.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC9261]  Sullivan, N., "Exported Authenticators in TLS", RFC 9261,
              DOI 10.17487/RFC9261, July 2022,
              <https://www.rfc-editor.org/rfc/rfc9261>.

   [RFC9334]  Birkholz, H., Thaler, D., Richardson, M., Smith, N., and
              W. Pan, "Remote ATtestation procedureS (RATS)
              Architecture", RFC 9334, DOI 10.17487/RFC9334, January
              2023, <https://www.rfc-editor.org/rfc/rfc9334>.

6.2.  Informative References

   [I-D.ietf-lamps-attestation-freshness]
              Tschofenig, H. and H. Brockhaus, "Nonce-based Freshness
              for Remote Attestation in Certificate Signing Requests
              (CSRs) for the Certification Management Protocol (CMP) and
              for Enrollment over Secure Transport (EST)", Work in
              Progress, Internet-Draft, draft-ietf-lamps-attestation-
              freshness-03, 5 November 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-lamps-
              attestation-freshness-03>.

   [I-D.ietf-lamps-csr-attestation]
              Ounsworth, M., Tschofenig, H., Birkholz, H., Wiseman, M.,
              and N. Smith, "Use of Remote Attestation with
              Certification Signing Requests", Work in Progress,
              Internet-Draft, draft-ietf-lamps-csr-attestation-16, 1
              February 2025, <https://datatracker.ietf.org/doc/html/
              draft-ietf-lamps-csr-attestation-16>.

Appendix A.  Acknowledgements

   Add your name here.

Authors' Addresses

   Thomas Fossati
   Linaro
   Email: thomas.fossati@linaro.org


   Muhammad Usama Sardar
   TU Dresden
   Email: muhammad_usama.sardar@tu-dresden.de


   Hannes Tschofenig
   University of Applied Sciences Bonn-Rhein-Sieg
   Germany
   Email: Hannes.Tschofenig@gmx.net
